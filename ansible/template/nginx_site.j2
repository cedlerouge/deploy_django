upstream dynamic-{{ item.name }} {
   server 127.0.0.1:{{ item.port }};
}
upstream static-{{ item.name }} {
   server 127.0.0.1:{{ item.port + 10 }};
}

proxy_cache_path  /var/tmp/cache-{{ item.name }} levels=1:2 keys_zone=STATIC-{{ item.name }}:10m inactive=24h max_size=1g;

server {
  listen 80;
  root        /opt/{{ item.name }};
{% if "prod" in item.name %}
  server_name _;
{% else %}
  server_name {{ item.name }}-betwit.lepont.bzh;
{% endif %}

## wait to provide letsencrypt
#  return      301 https://$server_name$request_uri;
#
#}
#
#
#server {
#  listen 443 ssl http2;
#  #listen [::]:443 ssl http2 ipv6only=on;
#
#  server_name {{ item.name }}betwit.lepont.bzh;
#
#  # https://bjornjohansen.no/optimizing-https-nginx
#  # https://www.wjd.io/lets-encrypt-beta
#  ssl_certificate     /etc/letsencrypt/live/{{ item.name }}/fullchain.pem;
#  ssl_certificate_key /etc/letsencrypt/live/{{ item.name }}/privkey.pem;
#  ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
#  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#  ssl_prefer_server_ciphers on;
#  ssl_session_cache shared:SSL:10m;
#  ssl_stapling on;
#  ssl_stapling_verify on;
#  ssl_dhparam /etc/ssl/private/dhparams_4096.pem;

  # Root request handler to gunicorn upstream
  location / {
     #return 503;
     proxy_pass   http://dynamic-{{ item.name }};
  }
  # Static request handler to apache upstream
  location /static {
      alias /opt/{{ item.name }}/betwit/staticfiles/;
      #proxy_pass http://static-{{ item,name }}/static;
      #proxy_set_header       Host $host;
      #proxy_cache            STATIC;
      #proxy_cache_valid      200  1d;
  }
  # Media request handler to apache upstream
  location /media {
      alias /opt/{{ item.name }}/media/;
      #proxy_pass http://static-{{ item.name }}/media;
      #proxy_set_header       Host $host;
      #proxy_cache            STATIC;
      #proxy_cache_valid      200  1d;
  }
  location /photo {
      alias /opt/{{ item.name }}/media/photo/;
      #proxy_pass http://static-{{ item.name }}/media/photo;
      #proxy_set_header       Host $host;
      #proxy_cache            STATIC;
      #proxy_cache_valid      200  1d;
  }
  # Enable Cache for Static Files
  #location ~*  \.(jpg|jpeg|png|gif|ico|css|js)$ {
  #  expires 365d;
  #  access_log off;
  #}

  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  error_page   500 502 504 @maintenance;
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /maintenance.html break;
  }

  error_log /var/log/nginx/betwit_error.log;
  access_log  /var/log/nginx/betwit_access.log;
}
